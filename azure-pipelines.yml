jobs:

  - job:
    displayName: "macOS_10.14"
    pool:
      vmImage: "macOS-10.14"
    strategy:
      matrix:
        python_2.7:
          python.version: "2.7"
        python_3.6:
          python.version: "3.6"
        python_3.7:
          python.version: "3.7"
        python_3.8:
          python.version: "3.8"
        python_3.9:
          python.version: "3.9"
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "$(python.version)"
        displayName: "Use Python $(python.version)"
      - script: brew install pkg-config poppler
        displayName: "Install dependencies"
      - script: |
          python --version
          python setup.py test
        displayName: "Test"

  - job:
    displayName: "macOS_10.15"
    pool:
      vmImage: "macOS-10.15"
    strategy:
      matrix:
        python_2.7:
          python.version: "2.7"
        python_3.6:
          python.version: "3.6"
        python_3.7:
          python.version: "3.7"
        python_3.8:
          python.version: "3.8"
        python_3.9:
          python.version: "3.9"
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "$(python.version)"
        displayName: "Use Python $(python.version)"
      - script: brew install pkg-config poppler
        displayName: "Install dependencies"
      - script: |
          python --version
          python setup.py test
        displayName: "Test"

  - job:
    displayName: "macOS_10.14 conda"
    pool:
      vmImage: "macOS-10.14"
    strategy:
      matrix:
        python_3.6:
          python.version: "3.6"
        python_3.7:
          python.version: "3.7"
        python_3.8:
          python.version: "3.8"
        python_3.9:
          python.version: "3.9"
    steps:
      - script: sudo chown -R $USER $CONDA
        displayName: "Fix ownership"
      - script: echo "##vso[task.prependpath]$CONDA/bin"
        displayName: "Add conda to path"
      - script: |
          conda update --yes conda
          conda config --add channels conda-forge
          conda config --set channel_priority strict
          conda create --yes --name testenv python=$PYTHON_VERSION pkg-config poppler
        displayName: "Install dependencies"
      - script: |
          source activate testenv
          python --version
          python setup.py test
        displayName: "Test"

  - job:
    displayName: "macOS_10.15 conda"
    pool:
      vmImage: "macOS-10.15"
    strategy:
      matrix:
        python_3.6:
          python.version: "3.6"
        python_3.7:
          python.version: "3.7"
        python_3.8:
          python.version: "3.8"
        python_3.9:
          python.version: "3.9"
    steps:
      - script: sudo chown -R $USER $CONDA
        displayName: "Fix ownership"
      - script: echo "##vso[task.prependpath]$CONDA/bin"
        displayName: "Add conda to path"
      - script: |
          conda update --yes conda
          conda config --add channels conda-forge
          conda config --set channel_priority strict
          conda create --yes --name testenv python=$PYTHON_VERSION pkg-config poppler
        displayName: "Install dependencies"
      - script: |
          source activate testenv
          python --version
          python setup.py test
        displayName: "Test"

  - job:
    displayName: "ubuntu_18.04"
    pool:
      vmImage: "ubuntu-18.04"
    strategy:
      matrix:
        python_2.7:
          python.version: "2.7"
        python_3.6:
          python.version: "3.6"
        python_3.7:
          python.version: "3.7"
        python_3.8:
          python.version: "3.8"
        python_3.9:
          python.version: "3.9"
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "$(python.version)"
        displayName: "Use Python $(python.version)"
      - script: |
          sudo apt-get update
          sudo apt-get install --yes libpoppler-cpp-dev pkg-config
        displayName: "Install dependencies"
      - script: |
          python --version
          python setup.py test
        displayName: "Test"

  - job:
    displayName: "ubuntu_20.04"
    pool:
      vmImage: "ubuntu-20.04"
    strategy:
      matrix:
        python_2.7:
          python.version: "2.7"
        python_3.6:
          python.version: "3.6"
        python_3.7:
          python.version: "3.7"
        python_3.8:
          python.version: "3.8"
        python_3.9:
          python.version: "3.9"
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "$(python.version)"
        displayName: "Use Python $(python.version)"
      - script: |
          sudo apt-get update
          sudo apt-get install --yes libpoppler-cpp-dev pkg-config
        displayName: "Install dependencies"
      - script: |
          python --version
          python setup.py test
        displayName: "Test"

  - job:
    displayName: "ubuntu_18.04 conda"
    pool:
      vmImage: "ubuntu-18.04"
    strategy:
      matrix:
        python_3.6:
          python.version: "3.6"
        python_3.7:
          python.version: "3.7"
        python_3.8:
          python.version: "3.8"
        python_3.9:
          python.version: "3.9"
    steps:
      - script: echo "##vso[task.prependpath]$CONDA/bin"
        displayName: "Add conda to path"
      - script: |
          sudo apt-get update
          sudo apt-get install --yes libpoppler-cpp-dev pkg-config
          conda update --yes conda
          conda config --add channels conda-forge
          conda config --set channel_priority strict
          conda create --yes --name testenv python=$PYTHON_VERSION
        displayName: "Install dependencies"
      - script: |
          source activate testenv
          python --version
          python setup.py test
        displayName: "Test"

  - job:
    displayName: "ubuntu_20.04 conda"
    pool:
      vmImage: "ubuntu-20.04"
    strategy:
      matrix:
        python_3.6:
          python.version: "3.6"
        python_3.7:
          python.version: "3.7"
        python_3.8:
          python.version: "3.8"
        python_3.9:
          python.version: "3.9"
    steps:
      - script: echo "##vso[task.prependpath]$CONDA/bin"
        displayName: "Add conda to path"
      - script: |
          sudo apt-get update
          sudo apt-get install --yes libpoppler-cpp-dev pkg-config
          conda update --yes conda
          conda config --add channels conda-forge
          conda config --set channel_priority strict
          conda create --yes --name testenv python=$PYTHON_VERSION
        displayName: "Install dependencies"
      - script: |
          source activate testenv
          python --version
          python setup.py test
        displayName: "Test"

  - job:
    displayName: "windows_2016 conda"
    pool:
      vmImage: "vs2017-win2016"
    strategy:
      matrix:
        python_3.6:
          python.version: "3.6"
        python_3.7:
          python.version: "3.7"
        python_3.8:
          python.version: "3.8"
        python_3.9:
          python.version: "3.9"
    steps:
      - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
        displayName: "Add conda to path"
      - powershell: |
          conda update --yes conda
          conda config --add channels conda-forge
          conda config --set channel_priority strict
          conda create --yes --name testenv python=$env:PYTHON_VERSION pkg-config poppler
        displayName: "Install dependencies"
      - script: |
          call activate testenv
          python --version
          python setup.py test
        displayName: "Test"

  - job:
    displayName: "windows_2019 conda"
    pool:
      vmImage: "windows-2019"
    strategy:
      matrix:
        python_3.6:
          python.version: "3.6"
        python_3.7:
          python.version: "3.7"
        python_3.8:
          python.version: "3.8"
        python_3.9:
          python.version: "3.9"
    steps:
      - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
        displayName: "Add conda to path"
      - powershell: |
          conda update --yes conda
          conda config --add channels conda-forge
          conda config --set channel_priority strict
          conda create --yes --name testenv python=$env:PYTHON_VERSION pkg-config poppler
        displayName: "Install dependencies"
      - script: |
          call activate testenv
          python --version
          python setup.py test
        displayName: "Test"

  - job:
    displayName: "Windows CI Build"
    pool:
      vmImage: "vs2017-win2016"
    variables:
      CIBW_REPAIR_WHEEL_COMMAND: delvewheel repair --add-path C:\Miniconda\Library\bin -w {dest_dir} {wheel}
      CIBW_BUILD: cp3*64
      CIBW_SKIP: cp35*
    steps:
      - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
        displayName: "Add conda to path"
      - powershell: |
          conda update --yes conda
          conda config --add channels conda-forge
          conda config --set channel_priority strict
          conda install poppler pkg-config
        displayName: "Install dependencies"
      - bash: |
          set -o errexit
          python -m pip install --upgrade pip
          pip install cibuildwheel==1.8.0 delvewheel>0.0.9
        displayName: Install cibuildwheel and delvewheel
      - powershell: |
          $env:CL = "/MT /IC:\Miniconda\Library\include"
          $env:LINK = "/LIBPATH:C:\Miniconda\Library\lib"
          cibuildwheel --output-dir wheelhouse .
        displayName: Build wheels
      - task: PublishBuildArtifacts@1
        inputs: {pathtoPublish: 'wheelhouse'}

  - job:
    displayName: macOS CI Build
    variables:
      CIBW_BUILD: cp3*
      CIBW_SKIP: cp35*
    pool: {vmImage: 'macOS-10.15'}
    steps:
      - task: UsePythonVersion@0
      - script: brew install pkg-config poppler
        displayName: "Install poppler and pkg-config"
      - bash: |
          set -o errexit
          python3 -m pip install --upgrade pip
          python3 -m pip install cibuildwheel==1.8.0
        displayName: Install dependencies
      - bash: cibuildwheel --output-dir wheelhouse .
        displayName: Build wheels
      - task: PublishBuildArtifacts@1
        inputs: {pathtoPublish: wheelhouse}

  - job: 
    displayName: Linux CI Build
    variables:
      CIBW_BUILD: cp3*
      CIBW_SKIP: cp35*
      CIBW_BEFORE_ALL: |
        pip install --upgrade cmake
        yum install -y fontconfig-devel libjpeg-turbo-devel openjpeg2-devel
        git clone https://gitlab.freedesktop.org/poppler/poppler
        cd poppler/
        mkdir build
        cd build
        cmake ..
        make -j8
        make install
    pool: {vmImage: 'Ubuntu-16.04'}
    steps:
     - task: UsePythonVersion@0
     - bash: |
         set -o errexit
         python3 -m pip install --upgrade pip
         pip3 install cibuildwheel==1.8.0
       displayName: Install dependencies
     - bash: cibuildwheel --output-dir wheelhouse .
       displayName: Build wheels
     - task: PublishBuildArtifacts@1
       inputs: {pathtoPublish: 'wheelhouse'}
